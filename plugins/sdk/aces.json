{
  "localization": {
    "conditions": [],
    "actions": [
      {
        "id": "switch-localization-language",
        "scriptName": "SwitchLanguage",
        "highlight": false,
        "params": [
          {
            "id": "lang",
            "type": "string"
          }
        ]
      },
      {
        "id": "set-default-localization-language",
        "scriptName": "SetDefaultLanguage",
        "highlight": false,
        "isDeprecated": true,
        "params": [
          {
            "id": "lang",
            "type": "string"
          }
        ]
      }
    ],
    "expressions": [
      {
        "id": "current-localization-language",
        "expressionName": "CurrentLanguage",
        "returnType": "string"
      },
      {
        "id": "localization-value",
        "expressionName": "LocalizationValue",
        "returnType": "string",
        "params": [
          {
            "id": "key",
            "type": "string"
          }
        ]
      }
    ]
  },

  "fullscreen-ad": {
    "conditions": [
      {
        "id": "on-fullscreen-ad-close",
        "scriptName": "OnFullscreenADClose",
        "isTrigger": true,
        "isInvertible": false,
        "isCompatibleWithTriggers": false
      },
      {
        "id": "fullscreen-ad-was-shown",
        "scriptName": "FullscreenADWasShown"
      },
      {
        "id": "on-fullscreen-ad-open",
        "scriptName": "OnFullscreenADOpen",
        "isTrigger": true,
        "isInvertible": false,
        "isCompatibleWithTriggers": false
      },
      {
        "id": "on-fullscreen-ad-error",
        "scriptName": "OnFullscreenADError",
        "isTrigger": true,
        "isInvertible": false,
        "isCompatibleWithTriggers": false
      },
      {
        "id": "on-fullscreen-ad-offline",
        "scriptName": "OnFullscreenADOffline",
        "isTrigger": true,
        "isInvertible": false,
        "isCompatibleWithTriggers": false
      }
    ],
    "actions": [
      {
        "id": "show-fullscreen-ad",
        "scriptName": "ShowFullscreenAD",
        "highlight": true
      }
    ],
    "expressions": [
      {
        "id": "fullscreen-ad-error",
        "expressionName": "FullscreenADError",
        "returnType": "string"
      }
    ]
  },

  "rewarded-ad": {
    "conditions": [
      {
        "id": "on-rewarded-ad-open",
        "scriptName": "OnRewardedADOpen",
        "isTrigger": true,
        "isInvertible": false,
        "isCompatibleWithTriggers": false,
        "params": [{ "id": "id", "type": "string" }]
      },
      {
        "id": "on-rewarded-ad-rewarded",
        "scriptName": "OnRewardedADRewarded",
        "isTrigger": true,
        "isInvertible": false,
        "isCompatibleWithTriggers": false,
        "params": [{ "id": "id", "type": "string" }]
      },
      {
        "id": "on-rewarded-ad-close",
        "scriptName": "OnRewardedADClose",
        "isTrigger": true,
        "isInvertible": false,
        "isCompatibleWithTriggers": false,
        "params": [{ "id": "id", "type": "string" }]
      },
      {
        "id": "on-rewarded-ad-error",
        "scriptName": "OnRewardedADError",
        "isTrigger": true,
        "isInvertible": false,
        "isCompatibleWithTriggers": false,
        "params": [{ "id": "id", "type": "string" }]
      },
      {
        "id": "on-any-rewarded-ad-open",
        "scriptName": "OnAnyRewardedADOpen",
        "isTrigger": true,
        "isInvertible": false,
        "isCompatibleWithTriggers": false
      },
      {
        "id": "on-any-rewarded-ad-close",
        "scriptName": "OnAnyRewardedADClose",
        "isTrigger": true,
        "isInvertible": false,
        "isCompatibleWithTriggers": false
      },
      {
        "id": "on-any-rewarded-ad-error",
        "scriptName": "OnAnyRewardedADError",
        "isTrigger": true,
        "isInvertible": false,
        "isCompatibleWithTriggers": false
      }
    ],
    "actions": [
      {
        "id": "show-rewarded-ad",
        "scriptName": "ShowRewardedAD",
        "highlight": true,
        "params": [{ "id": "id", "type": "string" }]
      }
    ],
    "expressions": [
      {
        "id": "rewarded-ad-error",
        "expressionName": "RewardedADError",
        "returnType": "string"
      }
    ]
  },

  "sticky-banner": {
    "conditions": [],
    "actions": [
      {
        "id": "show-sticky-banner",
        "scriptName": "ShowStickyBanner",
        "highlight": false,
        "params": []
      },
      {
        "id": "hide-sticky-banner",
        "scriptName": "HideStickyBanner",
        "highlight": false,
        "params": []
      }
    ],
    "expressions": []
  },

  "leaderboards": {
    "conditions": [
      {
        "id": "for-each-leaderboard-entry",
        "scriptName": "ForEachLeaderboardEntry",
        "highlight": false,
        "isCompatibleWithTriggers": false,
        "isLooping": true,
        "params": [
          { "id": "leaderboardName", "type": "string" },
          { "id": "quantityTop", "type": "number", "initialValue": "5" },
          { "id": "includeUser", "type": "boolean", "initialValue": "false" },
          { "id": "quantityAround", "type": "number", "initialValue": "5" }
        ]
      },
      {
        "id": "current-leadeboard-description-invert-order",
        "scriptName": "CurrentLeaderboardDescriptionInvertOrder",
        "highlight": false
      }
    ],
    "actions": [
      {
        "id": "set-leaderboard-score",
        "scriptName": "SetLeaderboardScore",
        "highlight": false,
        "params": [
          { "id": "leaderboardName", "type": "string" },
          { "id": "score", "type": "number" },
          { "id": "extraData", "type": "string", "initialValue": "" }
        ]
      }
    ],
    "expressions": [
      {
        "id": "current-leadeboard-entry-rank",
        "expressionName": "GetCurrentLeaderboardEntryRank",
        "returnType": "number"
      },
      {
        "id": "current-leadeboard-entry-score",
        "expressionName": "GetCurrentLeaderboardEntryScore",
        "returnType": "number"
      },
      {
        "id": "current-leadeboard-entry-extra-data",
        "expressionName": "GetCurrentLeaderboardEntryExtraData",
        "returnType": "string"
      },
      {
        "id": "current-leadeboard-entry-range-index",
        "expressionName": "GetCurrentLeaderboardEntryRangeIndex",
        "returnType": "number"
      },
      {
        "id": "current-leadeboard-description-name",
        "expressionName": "GetCurrentLeaderboardDescriptionName",
        "returnType": "string"
      },
      {
        "id": "current-leadeboard-description-type",
        "expressionName": "GetCurrentLeaderboardDescriptionType",
        "returnType": "string"
      },
      {
        "id": "current-leadeboard-description-title",
        "expressionName": "GetCurrentLeaderboardDescriptionTitle",
        "params": [{ "id": "lang", "type": "string" }],
        "returnType": "string"
      },
      {
        "id": "current-leadeboard-description-decimal-offset",
        "expressionName": "GetCurrentLeaderboardDescriptionDecimalOffset",
        "params": [{ "id": "lang", "type": "string" }],
        "returnType": "string"
      }
    ]
  },

  "purchases": {
    "actions": [
      {
        "id": "purchase",
        "scriptName": "Purchase",
        "params": [
          { "id": "productID", "type": "string" },
          { "id": "developerPayload", "type": "string" }
        ]
      },
      {
        "id": "consume-purchase",
        "scriptName": "ConsumePurchase",
        "params": [{ "id": "purchaseToken", "type": "string" }],
        "isAsync": true
      }
    ],
    "conditions": [
      {
        "id": "for-each-in-catalog",
        "scriptName": "ForEachInCatalog",
        "highlight": false,
        "isCompatibleWithTriggers": false,
        "isLooping": true
      },
      {
        "id": "for-each-purchase",
        "scriptName": "ForEachPurchase",
        "highlight": false,
        "isCompatibleWithTriggers": false,
        "isLooping": true
      },
      {
        "id": "on-purchase-success",
        "scriptName": "OnPurchaseSuccess",
        "isTrigger": true
      },
      {
        "id": "on-purchase-error",
        "scriptName": "OnPurchaseError",
        "isTrigger": true
      },
      {
        "id": "on-specific-purchase-success",
        "scriptName": "OnSpecificPurchaseSuccess",
        "params": [{ "id": "productID", "type": "string" }],
        "isFakeTrigger": true
      },
      {
        "id": "on-specific-purchase-error",
        "scriptName": "OnSpecificPurchaseError",
        "params": [{ "id": "productID", "type": "string" }],
        "isFakeTrigger": true
      }
    ],
    "expressions": [
      {
        "id": "purchase-token",
        "expressionName": "PurchaseToken",
        "returnType": "string"
      },
      {
        "id": "purchase-developer-payload",
        "expressionName": "PurchaseDeveloperPayload",
        "returnType": "string"
      },
      {
        "id": "purchase-signature",
        "expressionName": "PurchaseSignature",
        "returnType": "string"
      },
      {
        "id": "purchase-error",
        "expressionName": "PurchaseError",
        "returnType": "string"
      },
      {
        "id": "purchases-signature",
        "expressionName": "PurchasesSignature",
        "returnType": "string"
      },
      {
        "id": "product-id",
        "expressionName": "ProductID",
        "returnType": "string"
      },
      {
        "id": "product-title",
        "expressionName": "ProductTitle",
        "returnType": "string"
      },
      {
        "id": "product-description",
        "expressionName": "ProductDescription",
        "returnType": "string"
      },
      {
        "id": "product-image-uri",
        "expressionName": "ProductImageURI",
        "returnType": "string"
      },
      {
        "id": "product-price",
        "expressionName": "ProductPrice",
        "returnType": "string"
      },
      {
        "id": "product-price-value",
        "expressionName": "ProductPriceValue",
        "returnType": "number"
      },
      {
        "id": "product-price-currency-code",
        "expressionName": "ProductPriceCurrencyCode",
        "returnType": "string"
      },
      {
        "id": "product-price-currency-image",
        "expressionName": "ProductPriceCurrencyImage",
        "returnType": "string",
        "params": [{ "id": "size", "type": "string", "initialValue": "medium" }]
      }
    ]
  },

  "player": {
    "conditions": [
      {
        "id": "with-player-info",
        "scriptName": "WithPlayerInfo",
        "highlight": false,
        "isCompatibleWithTriggers": false,
        "isLooping": true,
        "params": [{ "id": "requestAuthorization", "type": "boolean" }]
      },
      {
        "id": "current-player-is-authorized",
        "scriptName": "CurrentPlayerIsAuthorized",
        "highlight": false,
        "isTrigger": false
      },
      {
        "id": "current-player-info-access-granted",
        "scriptName": "CurrentPlayerInfoAccessGranted",
        "highlight": false,
        "isTrigger": false
      }
    ],
    "actions": [
      {
        "id": "player-get-data",
        "scriptName": "PlayerGetData",
        "highlight": false,
        "isAsync": true,
        "params": [
          { "id": "jsonObject", "type": "object", "allowedPluginIds": ["Json"] },
          { "id": "keys", "type": "string" }
        ]
      },
      {
        "id": "player-get-stats",
        "scriptName": "PlayerGetStats",
        "highlight": false,
        "isAsync": true,
        "params": [{ "id": "jsonObject", "type": "object", "allowedPluginIds": ["Json"] }]
      },
      {
        "id": "player-set-data",
        "scriptName": "PlayerSetData",
        "highlight": false,
        "isAsync": true,
        "params": [
          { "id": "jsonObject", "type": "object", "allowedPluginIds": ["Json"] },
          { "id": "flush", "type": "boolean", "initialValue": "false" }
        ]
      },
      {
        "id": "player-set-stats",
        "scriptName": "PlayerSetStats",
        "highlight": false,
        "isAsync": true,
        "params": [{ "id": "jsonObject", "type": "object", "allowedPluginIds": ["Json"] }]
      },
      {
        "id": "player-increment-stats",
        "scriptName": "PlayerIncrementStats",
        "highlight": false,
        "isAsync": true,
        "params": [{ "id": "jsonObject", "type": "object", "allowedPluginIds": ["Json"] }]
      }
    ],
    "expressions": [
      {
        "id": "current-player-unique-id",
        "expressionName": "GetCurrentPlayerUniqueID",
        "returnType": "string"
      },
      {
        "id": "current-player-name",
        "expressionName": "GetCurrentPlayerName",
        "returnType": "string"
      },
      {
        "id": "current-player-avatar",
        "expressionName": "GetCurrentPlayerAvatar",
        "params": [{ "id": "size", "type": "string", "initialValue": "medium" }],
        "returnType": "string"
      },
      {
        "id": "current-player-avatar-small",
        "expressionName": "PlayerAvatarSmall",
        "returnType": "string"
      },
      {
        "id": "current-player-avatar-medium",
        "expressionName": "PlayerAvatarMedium",
        "returnType": "string"
      },
      {
        "id": "current-player-avatar-large",
        "expressionName": "PlayerAvatarLarge",
        "returnType": "string"
      },
      {
        "id": "current-player-signature",
        "expressionName": "GetCurrentPlayerSignature",
        "returnType": "string"
      }
    ]
  },

  "environment": {
    "conditions": [],
    "actions": [],
    "expressions": [
      {
        "id": "get-language",
        "expressionName": "GetLanguage",
        "returnType": "string"
      },
      {
        "id": "get-tld",
        "expressionName": "GetDomain",
        "returnType": "string"
      },
      {
        "id": "get-payload",
        "expressionName": "GetPayload",
        "returnType": "string"
      },
      {
        "id": "get-app-id",
        "expressionName": "GetAppID",
        "returnType": "string"
      }
    ]
  },

  "deviceInfo": {
    "conditions": [
      {
        "id": "is-mobile",
        "scriptName": "IsMobile"
      },
      {
        "id": "is-desktop",
        "scriptName": "IsDesktop"
      },
      {
        "id": "is-tablet",
        "scriptName": "IsTablet"
      },
      {
        "id": "is-tv",
        "scriptName": "IsTV"
      }
    ],
    "actions": [],
    "expressions": []
  },

  "events": {
    "conditions": [
      {
        "id": "on-history-back-event",
        "scriptName": "OnHistoryBackEvent",
        "isTrigger": true
      }
    ],
    "actions": [
      {
        "id": "dispatch-event",
        "scriptName": "DispatchEvent",
        "highlight": false,
        "params": [{ "id": "name", "type": "combo", "items": ["EXIT"] }]
      }
    ],
    "expressions": []
  },

  "shortcut": {
    "conditions": [
      {
        "id": "shortcut-can-show-prompt",
        "scriptName": "ShortcutCanShowPrompt"
      },
      {
        "id": "shortcut-added",
        "scriptName": "OnShortcutAdded",
        "isTrigger": true
      }
    ],
    "actions": [
      {
        "id": "shortcut-show-prompt",
        "scriptName": "ShortcutShowPrompt",
        "highlight": false
      }
    ],
    "expressions": []
  },

  "remote-config": {
    "conditions": [
      {
        "id": "on-remote-config-ready",
        "scriptName": "OnRemoteConfigReady",
        "isTrigger": true
      }
    ],
    "actions": [
      {
        "id": "remote-config-set-default",
        "scriptName": "RemoteConfigSetDefault",
        "highlight": false,
        "params": [
          { "id": "key", "type": "string" },
          { "id": "value", "type": "string" }
        ]
      },
      {
        "id": "remote-config-set-client-feature",
        "scriptName": "RemoteConfigSetClientFeature",
        "highlight": false,
        "params": [
          { "id": "name", "type": "string" },
          { "id": "value", "type": "string" }
        ]
      },
      {
        "id": "remote-config-fetch",
        "scriptName": "RemoteConfigFetch",
        "highlight": false
      }
    ],
    "expressions": [
      {
        "id": "remote-config-get-flag",
        "expressionName": "RemoteConfigGetFlag",
        "params": [{ "id": "name", "type": "string" }],
        "returnType": "string"
      }
    ]
  },

  "tv": {
    "conditions": [
      {
        "id": "tv-button-pressed",
        "scriptName": "IsTVRemoteButtonPressed",
        "isTrigger": false,
        "isCompatibleWithTriggers": true,
        "params": [{ "id": "button", "type": "combo", "items": ["up", "down", "left", "right", "ok"] }]
      },
      {
        "id": "on-tv-button-press",
        "scriptName": "OnTVRemoteButtonPress",
        "isTrigger": true,
        "params": [{ "id": "button", "type": "combo", "items": ["up", "down", "left", "right", "ok"] }]
      },
      {
        "id": "on-tv-button-release",
        "scriptName": "OnTVRemoteButtonRelease",
        "isTrigger": true,
        "params": [{ "id": "button", "type": "combo", "items": ["up", "down", "left", "right", "ok"] }]
      }
    ],
    "actions": [],
    "expressions": []
  },

  "misc": {
    "conditions": [
      {
        "id": "throttle",
        "scriptName": "Throttle",
        "highlight": false,
        "isLooping": true,
        "isCompatibleWithTriggers": false,
        "params": [{ "id": "seconds", "type": "number" }]
      },
      {
        "id": "debounce",
        "scriptName": "Debounce",
        "highlight": false,
        "isLooping": true,
        "isCompatibleWithTriggers": false,
        "params": [{ "id": "seconds", "type": "number" }]
      }
    ],
    "actions": [
      {
        "id": "initialize-ysdk",
        "scriptName": "InitializeYSDK",
        "highlight": false,
        "isAsync": true
      },
      {
        "id": "loading-api-ready",
        "scriptName": "LoadingAPIReady",
        "highlight": true
      }
    ],
    "expressions": []
  }
}
